#ifndef VCDParserHEADER_H
#define VCDParserHEADER_H 1
#define VCDParserIN_HEADER 1

#line 6 "VCDScanner.hpp"

#line 8 "VCDScanner.hpp"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

/* %not-for-header */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 6
#define YY_FLEX_SUBMINOR_VERSION 4
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

/* %if-c++-only */
/* %endif */

/* %if-c-only */
#ifdef yy_create_buffer
#define VCDParser_create_buffer_ALREADY_DEFINED
#else
#define yy_create_buffer VCDParser_create_buffer
#endif

#ifdef yy_delete_buffer
#define VCDParser_delete_buffer_ALREADY_DEFINED
#else
#define yy_delete_buffer VCDParser_delete_buffer
#endif

#ifdef yy_scan_buffer
#define VCDParser_scan_buffer_ALREADY_DEFINED
#else
#define yy_scan_buffer VCDParser_scan_buffer
#endif

#ifdef yy_scan_string
#define VCDParser_scan_string_ALREADY_DEFINED
#else
#define yy_scan_string VCDParser_scan_string
#endif

#ifdef yy_scan_bytes
#define VCDParser_scan_bytes_ALREADY_DEFINED
#else
#define yy_scan_bytes VCDParser_scan_bytes
#endif

#ifdef yy_init_buffer
#define VCDParser_init_buffer_ALREADY_DEFINED
#else
#define yy_init_buffer VCDParser_init_buffer
#endif

#ifdef yy_flush_buffer
#define VCDParser_flush_buffer_ALREADY_DEFINED
#else
#define yy_flush_buffer VCDParser_flush_buffer
#endif

#ifdef yy_load_buffer_state
#define VCDParser_load_buffer_state_ALREADY_DEFINED
#else
#define yy_load_buffer_state VCDParser_load_buffer_state
#endif

#ifdef yy_switch_to_buffer
#define VCDParser_switch_to_buffer_ALREADY_DEFINED
#else
#define yy_switch_to_buffer VCDParser_switch_to_buffer
#endif

#ifdef yypush_buffer_state
#define VCDParserpush_buffer_state_ALREADY_DEFINED
#else
#define yypush_buffer_state VCDParserpush_buffer_state
#endif

#ifdef yypop_buffer_state
#define VCDParserpop_buffer_state_ALREADY_DEFINED
#else
#define yypop_buffer_state VCDParserpop_buffer_state
#endif

#ifdef yyensure_buffer_stack
#define VCDParserensure_buffer_stack_ALREADY_DEFINED
#else
#define yyensure_buffer_stack VCDParserensure_buffer_stack
#endif

#ifdef yylex
#define VCDParserlex_ALREADY_DEFINED
#else
#define yylex VCDParserlex
#endif

#ifdef yyrestart
#define VCDParserrestart_ALREADY_DEFINED
#else
#define yyrestart VCDParserrestart
#endif

#ifdef yylex_init
#define VCDParserlex_init_ALREADY_DEFINED
#else
#define yylex_init VCDParserlex_init
#endif

#ifdef yylex_init_extra
#define VCDParserlex_init_extra_ALREADY_DEFINED
#else
#define yylex_init_extra VCDParserlex_init_extra
#endif

#ifdef yylex_destroy
#define VCDParserlex_destroy_ALREADY_DEFINED
#else
#define yylex_destroy VCDParserlex_destroy
#endif

#ifdef yyget_debug
#define VCDParserget_debug_ALREADY_DEFINED
#else
#define yyget_debug VCDParserget_debug
#endif

#ifdef yyset_debug
#define VCDParserset_debug_ALREADY_DEFINED
#else
#define yyset_debug VCDParserset_debug
#endif

#ifdef yyget_extra
#define VCDParserget_extra_ALREADY_DEFINED
#else
#define yyget_extra VCDParserget_extra
#endif

#ifdef yyset_extra
#define VCDParserset_extra_ALREADY_DEFINED
#else
#define yyset_extra VCDParserset_extra
#endif

#ifdef yyget_in
#define VCDParserget_in_ALREADY_DEFINED
#else
#define yyget_in VCDParserget_in
#endif

#ifdef yyset_in
#define VCDParserset_in_ALREADY_DEFINED
#else
#define yyset_in VCDParserset_in
#endif

#ifdef yyget_out
#define VCDParserget_out_ALREADY_DEFINED
#else
#define yyget_out VCDParserget_out
#endif

#ifdef yyset_out
#define VCDParserset_out_ALREADY_DEFINED
#else
#define yyset_out VCDParserset_out
#endif

#ifdef yyget_leng
#define VCDParserget_leng_ALREADY_DEFINED
#else
#define yyget_leng VCDParserget_leng
#endif

#ifdef yyget_text
#define VCDParserget_text_ALREADY_DEFINED
#else
#define yyget_text VCDParserget_text
#endif

#ifdef yyget_lineno
#define VCDParserget_lineno_ALREADY_DEFINED
#else
#define yyget_lineno VCDParserget_lineno
#endif

#ifdef yyset_lineno
#define VCDParserset_lineno_ALREADY_DEFINED
#else
#define yyset_lineno VCDParserset_lineno
#endif

#ifdef yywrap
#define VCDParserwrap_ALREADY_DEFINED
#else
#define yywrap VCDParserwrap
#endif

/* %endif */

#ifdef yyalloc
#define VCDParseralloc_ALREADY_DEFINED
#else
#define yyalloc VCDParseralloc
#endif

#ifdef yyrealloc
#define VCDParserrealloc_ALREADY_DEFINED
#else
#define yyrealloc VCDParserrealloc
#endif

#ifdef yyfree
#define VCDParserfree_ALREADY_DEFINED
#else
#define yyfree VCDParserfree
#endif

/* %if-c-only */

#ifdef yytext
#define VCDParsertext_ALREADY_DEFINED
#else
#define yytext VCDParsertext
#endif

#ifdef yyleng
#define VCDParserleng_ALREADY_DEFINED
#else
#define yyleng VCDParserleng
#endif

#ifdef yyin
#define VCDParserin_ALREADY_DEFINED
#else
#define yyin VCDParserin
#endif

#ifdef yyout
#define VCDParserout_ALREADY_DEFINED
#else
#define yyout VCDParserout
#endif

#ifdef yy_flex_debug
#define VCDParser_flex_debug_ALREADY_DEFINED
#else
#define yy_flex_debug VCDParser_flex_debug
#endif

#ifdef yylineno
#define VCDParserlineno_ALREADY_DEFINED
#else
#define yylineno VCDParserlineno
#endif

/* %endif */

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */
/* %if-c-only */
#include <stdio.h>
#include <string.h>
#include <errno.h>
#include <stdlib.h>
/* %endif */

/* %if-tables-serialization */
/* %endif */
/* end standard C headers. */

/* %if-c-or-c++ */
/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#ifndef SIZE_MAX
#define SIZE_MAX               (~(size_t)0)
#endif

#endif /* ! C99 */

#endif /* ! FLEXINT_H */

/* %endif */

/* begin standard C++ headers. */
/* %if-c++-only */
/* %endif */

/* TODO: this is always defined, so inline it */
#define yyconst const

#if defined(__GNUC__) && __GNUC__ >= 3
#define yynoreturn __attribute__((__noreturn__))
#else
#define yynoreturn
#endif

/* %not-for-header */

/* %not-for-header */

/* %if-reentrant */
/* %endif */

/* %if-not-reentrant */

/* %endif */

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k.
 * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
 * Ditto for the __ia64__ case accordingly.
 */
#define YY_BUF_SIZE 32768
#else
#define YY_BUF_SIZE 16384
#endif /* __ia64__ */
#endif

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

/* %if-not-reentrant */
extern int yyleng;
/* %endif */

/* %if-c-only */
/* %if-not-reentrant */
extern FILE *yyin, *yyout;
/* %endif */
/* %endif */

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{
/* %if-c-only */
	FILE *yy_input_file;
/* %endif */

/* %if-c++-only */
/* %endif */

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	int yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */

/* %endif */

/* %if-c-only Standard (non-C++) definition */

/* %if-not-reentrant */
/* %not-for-header */

/* %endif */

void yyrestart ( FILE *input_file  );
void yy_switch_to_buffer ( YY_BUFFER_STATE new_buffer  );
YY_BUFFER_STATE yy_create_buffer ( FILE *file, int size  );
void yy_delete_buffer ( YY_BUFFER_STATE b  );
void yy_flush_buffer ( YY_BUFFER_STATE b  );
void yypush_buffer_state ( YY_BUFFER_STATE new_buffer  );
void yypop_buffer_state ( void );

YY_BUFFER_STATE yy_scan_buffer ( char *base, yy_size_t size  );
YY_BUFFER_STATE yy_scan_string ( const char *yy_str  );
YY_BUFFER_STATE yy_scan_bytes ( const char *bytes, int len  );

/* %endif */

void *yyalloc ( yy_size_t  );
void *yyrealloc ( void *, yy_size_t  );
void yyfree ( void *  );

/* %% [1.0] yytext/yyin/yyout/yy_state_type/yylineno etc. def's & init go here */
/* Begin user sect3 */

#define VCDParserwrap() (/*CONSTCOND*/1)
#define YY_SKIP_YYWRAP

#define FLEX_DEBUG

extern int yylineno;

extern char *yytext;
#ifdef yytext_ptr
#undef yytext_ptr
#endif
#define yytext_ptr yytext

/* %if-c-only Standard (non-C++) definition */

/* %endif */

#ifdef YY_HEADER_EXPORT_START_CONDITIONS
#define INITIAL 0
#define IN_COMMENT 1
#define IN_DATE 2
#define IN_VERSION 3
#define IN_TIMESCALE 4
#define IN_SCOPE 5
#define IN_VAR 6
#define IN_VAR_PID 7
#define IN_VAR_PSIZE 8
#define IN_VAR_RNG 9
#define IN_SIMTIME 10
#define IN_VAL_CHANGES 11
#define IN_VAL_IDCODE 12

#endif

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
/* %if-c-only */
#include <unistd.h>
/* %endif */
/* %if-c++-only */
/* %endif */
#endif

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

/* %if-c-only Reentrant structure and macros (non-C++). */
/* %if-reentrant */
/* %if-c-only */

/* %endif */
/* %if-reentrant */
/* %endif */
/* %endif End reentrant structures and macros. */

/* Accessor methods to globals.
   These are made visible to non-reentrant scanners for convenience. */

int yylex_destroy ( void );

int yyget_debug ( void );

void yyset_debug ( int debug_flag  );

YY_EXTRA_TYPE yyget_extra ( void );

void yyset_extra ( YY_EXTRA_TYPE user_defined  );

FILE *yyget_in ( void );

void yyset_in  ( FILE * _in_str  );

FILE *yyget_out ( void );

void yyset_out  ( FILE * _out_str  );

			int yyget_leng ( void );

char *yyget_text ( void );

int yyget_lineno ( void );

void yyset_lineno ( int _line_number  );

/* %if-bison-bridge */
/* %endif */

/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int yywrap ( void );
#else
extern int yywrap ( void );
#endif
#endif

/* %not-for-header */

/* %endif */

#ifndef yytext_ptr
static void yy_flex_strncpy ( char *, const char *, int );
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen ( const char * );
#endif

#ifndef YY_NO_INPUT
/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */

/* %endif */
#endif

/* %if-c-only */

/* %endif */

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k */
#define YY_READ_BUF_SIZE 16384
#else
#define YY_READ_BUF_SIZE 8192
#endif /* __ia64__ */
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* %if-tables-serialization structures and prototypes */
/* %not-for-header */

/* %not-for-header */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1
/* %if-c-only Standard (non-C++) definition */

extern int yylex (void);

#define YY_DECL int yylex (void)
/* %endif */
/* %if-c++-only C++ definition */
/* %endif */
#endif /* !YY_DECL */

/* %not-for-header */

/* %if-c++-only */
/* %not-for-header */

/* %endif */

/* yy_get_previous_state - get the state just before the EOB char was reached */

/* %if-c-only */
/* %not-for-header */

#undef YY_NEW_FILE
#undef YY_FLUSH_BUFFER
#undef yy_set_bol
#undef yy_new_buffer
#undef yy_set_interactive
#undef YY_DO_BEFORE_ACTION

#ifdef YY_DECL_IS_OURS
#undef YY_DECL_IS_OURS
#undef YY_DECL
#endif

#ifndef VCDParser_create_buffer_ALREADY_DEFINED
#undef yy_create_buffer
#endif
#ifndef VCDParser_delete_buffer_ALREADY_DEFINED
#undef yy_delete_buffer
#endif
#ifndef VCDParser_scan_buffer_ALREADY_DEFINED
#undef yy_scan_buffer
#endif
#ifndef VCDParser_scan_string_ALREADY_DEFINED
#undef yy_scan_string
#endif
#ifndef VCDParser_scan_bytes_ALREADY_DEFINED
#undef yy_scan_bytes
#endif
#ifndef VCDParser_init_buffer_ALREADY_DEFINED
#undef yy_init_buffer
#endif
#ifndef VCDParser_flush_buffer_ALREADY_DEFINED
#undef yy_flush_buffer
#endif
#ifndef VCDParser_load_buffer_state_ALREADY_DEFINED
#undef yy_load_buffer_state
#endif
#ifndef VCDParser_switch_to_buffer_ALREADY_DEFINED
#undef yy_switch_to_buffer
#endif
#ifndef VCDParserpush_buffer_state_ALREADY_DEFINED
#undef yypush_buffer_state
#endif
#ifndef VCDParserpop_buffer_state_ALREADY_DEFINED
#undef yypop_buffer_state
#endif
#ifndef VCDParserensure_buffer_stack_ALREADY_DEFINED
#undef yyensure_buffer_stack
#endif
#ifndef VCDParserlex_ALREADY_DEFINED
#undef yylex
#endif
#ifndef VCDParserrestart_ALREADY_DEFINED
#undef yyrestart
#endif
#ifndef VCDParserlex_init_ALREADY_DEFINED
#undef yylex_init
#endif
#ifndef VCDParserlex_init_extra_ALREADY_DEFINED
#undef yylex_init_extra
#endif
#ifndef VCDParserlex_destroy_ALREADY_DEFINED
#undef yylex_destroy
#endif
#ifndef VCDParserget_debug_ALREADY_DEFINED
#undef yyget_debug
#endif
#ifndef VCDParserset_debug_ALREADY_DEFINED
#undef yyset_debug
#endif
#ifndef VCDParserget_extra_ALREADY_DEFINED
#undef yyget_extra
#endif
#ifndef VCDParserset_extra_ALREADY_DEFINED
#undef yyset_extra
#endif
#ifndef VCDParserget_in_ALREADY_DEFINED
#undef yyget_in
#endif
#ifndef VCDParserset_in_ALREADY_DEFINED
#undef yyset_in
#endif
#ifndef VCDParserget_out_ALREADY_DEFINED
#undef yyget_out
#endif
#ifndef VCDParserset_out_ALREADY_DEFINED
#undef yyset_out
#endif
#ifndef VCDParserget_leng_ALREADY_DEFINED
#undef yyget_leng
#endif
#ifndef VCDParserget_text_ALREADY_DEFINED
#undef yyget_text
#endif
#ifndef VCDParserget_lineno_ALREADY_DEFINED
#undef yyget_lineno
#endif
#ifndef VCDParserset_lineno_ALREADY_DEFINED
#undef yyset_lineno
#endif
#ifndef VCDParserget_column_ALREADY_DEFINED
#undef yyget_column
#endif
#ifndef VCDParserset_column_ALREADY_DEFINED
#undef yyset_column
#endif
#ifndef VCDParserwrap_ALREADY_DEFINED
#undef yywrap
#endif
#ifndef VCDParserget_lval_ALREADY_DEFINED
#undef yyget_lval
#endif
#ifndef VCDParserset_lval_ALREADY_DEFINED
#undef yyset_lval
#endif
#ifndef VCDParserget_lloc_ALREADY_DEFINED
#undef yyget_lloc
#endif
#ifndef VCDParserset_lloc_ALREADY_DEFINED
#undef yyset_lloc
#endif
#ifndef VCDParseralloc_ALREADY_DEFINED
#undef yyalloc
#endif
#ifndef VCDParserrealloc_ALREADY_DEFINED
#undef yyrealloc
#endif
#ifndef VCDParserfree_ALREADY_DEFINED
#undef yyfree
#endif
#ifndef VCDParsertext_ALREADY_DEFINED
#undef yytext
#endif
#ifndef VCDParserleng_ALREADY_DEFINED
#undef yyleng
#endif
#ifndef VCDParserin_ALREADY_DEFINED
#undef yyin
#endif
#ifndef VCDParserout_ALREADY_DEFINED
#undef yyout
#endif
#ifndef VCDParser_flex_debug_ALREADY_DEFINED
#undef yy_flex_debug
#endif
#ifndef VCDParserlineno_ALREADY_DEFINED
#undef yylineno
#endif
#ifndef VCDParsertables_fload_ALREADY_DEFINED
#undef yytables_fload
#endif
#ifndef VCDParsertables_destroy_ALREADY_DEFINED
#undef yytables_destroy
#endif
#ifndef VCDParserTABLES_NAME_ALREADY_DEFINED
#undef yyTABLES_NAME
#endif

#line 409 "VCDScanner.l"


#line 832 "VCDScanner.hpp"
#undef VCDParserIN_HEADER
#endif /* VCDParserHEADER_H */
